# ChromosomeShuffle: to perform independent segregation of chromosome by shuffling
# parameter:
# 1. map: the map created by "createQTLpos", consisting of locations of markers and QTLs.
#         can be accessed by extract the first object of the list generated by "createQTLpos"
# 2. crosspos: index matrix of recombination (output of "CrossPos")
ChromosomeShuffle <- function(map, crosspos){
  
  nchr <- length(unique(map[,1]))
  ngam <- nrow(crosspos)
  nloci <- ncol(crosspos)
  nlocibychr  <- table(map[,1])
  csnloci <- cumsum(nlocibychr)
  indxout1 <- matrix(NA, nrow = ngam, ncol = nloci)
  indx <- lapply(nlocibychr,function(x){matrix(rep(sample(c(0,1), replace = T, size = ngam, prob = c(0.5,0.5)), times = x), byrow = F, nrow = ngam)})
  from <- 1
  for(i in 1:nchr){
    indxout1[,from:csnloci[i]] <- indx[[i]]
    from <- from + nlocibychr[i]
  } # for loop end
  if(any(is.na(indxout1))){stop("Some elements did not be assigned index score")}
  
  indxout2 <- abs(indxout1-1)
  #sum(crossindx!=crosspos)
  #sum(indxout1!=indxout2)
  #sum(abs(crosspos-1))- sum(crosspos)
  crossindx <- crosspos*indxout1 + abs(crosspos-1)*indxout2
  return(crossindx)
} # ChromosomeShuffle end
